package com.springCrudOperation.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.InternalResourceViewResolver;

import com.springCrudOperation.DAO.EmployeeDAOImpl;
import com.springCrudOperation.model.Employee;

@Controller
public class EmployeeController
{
	@Autowired
	EmployeeDAOImpl dao;

	/**It displays a form to input data, here "command" is a reserved request attribute 
	     	which is used to display object data into form 
	 * @return
	 */
	@RequestMapping("/empform")  
	public ModelAndView showform(){  
		return new ModelAndView("empform.jsp","command",new Employee());  
	}  

	/**It saves object into database. The @ModelAttribute puts request data 
	 * into model object. You need to mention RequestMethod.POST method  
	 * because default request is GET
	 * @param emp
	 * @return
	 */
	@RequestMapping(value="/save",method = RequestMethod.POST)  
	public ModelAndView save(@ModelAttribute("Employee") Employee emp){  
		System.out.println(dao);
		dao.save(emp);  
		return new ModelAndView("redirect:/viewemp");  
	}  

	/**It provides list of employees in model object
	 * @return
	 */
	@RequestMapping("/viewemp")  
	public ModelAndView viewemp(){  
		List<Employee> list=dao.getEmployees();  
		return new ModelAndView("viewemp.jsp","list",list);  
	}  

	/**It displays object data into form for the given id.  
	     The @PathVariable puts URL data into variable.
	 * @param id
	 * @return
	 */
	/**
	 * @param id
	 * @return
	 */
	@RequestMapping(value="/editemp/{id}")  
    public ModelAndView edit(@PathVariable("id") int id){
		
		System.out.println("Got the id as "+id);
        Employee emp=dao.getEmpById(id);  
        System.out.println("Emp is"+emp);
        return new ModelAndView("/empeditform.jsp","command",emp);  
    }  

	/** It updates model object
	 * @param emp
	 * @return
	 */
	  @RequestMapping(value="/editsave",method = RequestMethod.POST)  
	    public ModelAndView editsave(@ModelAttribute("emp") Employee emp){ 
		  int id = emp.getId();
	        dao.update(id,emp);
	        
	        return new ModelAndView("redirect:/viewemp.jsp");  
	    }  

	/**It deletes record for the given id in URL and redirects to /viewemp
	 * @param id
	 * @return
	 */
	@RequestMapping(value="/deleteemp/{id}",method = RequestMethod.GET)  
	public ModelAndView delete(@PathVariable int id){  
		dao.delete(id);  
		return new ModelAndView("redirect:/viewemp");  
	}  
}